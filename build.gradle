plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'idea'
}

group = 'com.leonardo.rocha'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.6.2'
	implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'

	implementation "org.mariadb.jdbc:mariadb-java-client:1.5.7"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.apache.commons:commons-lang3:3.7')
	testImplementation('org.springframework.boot:spring-boot-starter-test:2.2.4.RELEASE')
}

test {
	useJUnitPlatform()
}

sourceSets{
	integration {
		java.srcDir("${projectDir}/src/integration/java")
		resources.srcDir("${projectDir}/src/integration/resources")
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

configurations {
	integrationImplementation.extendsFrom(testImplementation)
	integrationRunetime.extendsFrom(testRuntime)
}

idea {
	module {
		testSourceDirs += sourceSets.integration.java.srcDirs
		testResourceDirs += sourceSets.integration.resources.srcDirs
		scopes.TEST.plus += [ configurations.integrationCompileClasspath ]
	}
}

task integrationTest(type: Test){
	description = 'Runs the integration tests.'
	group = 'verification'
	testClassesDirs = sourceSets.integration.output.classesDirs
	classpath = sourceSets.integration.runtimeClasspath
	outputs.upToDateWhen { false }
	mustRunAfter(test)
}

check.dependsOn(integrationTest)